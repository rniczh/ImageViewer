name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build for specific platform
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            npx electron-builder --linux
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            npx electron-builder --win
          else
            npx electron-builder --mac
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: dist/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: dist/linux
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows-latest
          path: dist/windows
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-latest
          path: dist/mac

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          files: dist/*.deb dist/*.dmg dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
